{{- if .Values.ingress.enable }}
{{- $fullName := include "reportportal.fullname" . -}}
{{- $isTlsCertComplete := and .Values.ingress.tls.certificate.certificate .Values.ingress.tls.certificate.privateKey -}}
{{- $path := .Values.ingress.path -}}
{{- $basePath := "" -}}
{{- if $path -}}
  {{- if eq $path "/" -}}
    {{- $basePath = "" -}}
  {{- else -}}
    {{- $basePath = trimSuffix "/" $path -}}
  {{- end -}}
{{- end -}}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}-gateway-ingress
  labels: {{ include "labels" . | indent 4 }}
  annotations:
  {{- if eq .Values.ingress.class "nginx" }}
    {{- range $key, $value := .Values.ingress.annotations.nginx }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- else if eq .Values.ingress.class "gce" }}
    {{- if .Values.ingress.tls.certificate.gcpManaged }}
    networking.gke.io/managed-certificates: {{ .Release.Name }}-gcp-managed-cert
    {{- end }}
    {{- range $key, $value := .Values.ingress.annotations.gce }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- else if eq .Values.ingress.class "alb" }}
    kubernetes.io/ingress.class: alb
    {{- range $key, $value := .Values.ingress.annotations.alb }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- else }}
    {{- range $key, $value := .Values.ingress.annotations.custom }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  # Define the ingress class to use
  {{- if or (eq .Values.ingress.class "gce") (eq .Values.ingress.class "alb") }}
  {{- else }}
  ingressClassName: {{ .Values.ingress.class }}
  {{- end }}
  # Define the TLS settings
  {{- if .Values.ingress.tls.certificates }}
  tls:
    {{ toYaml .Values.ingress.tls.certificates | nindent 4 }}
  {{- else if and $isTlsCertComplete (eq .Values.ingress.tls.certificate.gcpManaged false) (ne .Values.ingress.class "alb") }}
  tls:
    - secretName: {{ .Release.Name }}-gateway-tls
      {{- if .Values.ingress.hosts }}
      {{- if kindIs "slice" .Values.ingress.hosts }}
      hosts:
        {{ toYaml .Values.ingress.hosts | nindent 8 }}
      {{- else if kindIs "string" .Values.ingress.hosts }}
      hosts:
        - {{ .Values.ingress.hosts }}
      {{- end }}
      {{- end }}
  {{- else if eq .Values.ingress.class "alb" }}
  # ALB uses certificate ARN via annotations, no TLS section needed
  {{- end }}
  # Define the rules for the ingress
  rules:
  {{- if .Values.ingress.hosts }}
  {{- if kindIs "slice" .Values.ingress.hosts }}
  {{- range $host := .Values.ingress.hosts }}
  - host: {{ $host }}
    http:
      paths:
      - path: {{ $basePath | default "/" }}
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}-index
            port:
              name: {{ $.Values.serviceindex.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/ui
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}-ui
            port:
              name: {{ $.Values.serviceui.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/uat
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}-uat
            port:
              name: {{ $.Values.uat.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/api
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}-api
            port:
              name: {{ $.Values.serviceapi.service.portName | default "headless" }}
  {{- end }}
  {{- else if kindIs "string" .Values.ingress.hosts }}
  - host: {{ .Values.ingress.hosts }}
    http:
      paths:
      - path: {{ $basePath | default "/" }}
          pathType: Prefix
          backend:
            service:
              name: {{ $fullName }}-index
              port:
                name: {{ $.Values.serviceindex.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/ui
          pathType: Prefix
          backend:
            service:
              name: {{ $fullName }}-ui
              port:
                name: {{ $.Values.serviceui.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/uat
          pathType: Prefix
          backend:
            service:
              name: {{ $fullName }}-uat
              port:
                name: {{ $.Values.uat.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/api
          pathType: Prefix
          backend:
            service:
              name: {{ $fullName }}-api
              port:
                name: {{ $.Values.serviceapi.service.portName | default "headless" }}
  {{- end }}
  {{- else }}
  - http:
      paths:
      - path: {{ $basePath | default "/" }}
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}-index
            port:
              name: {{ $.Values.serviceindex.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/ui
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}-ui
            port:
              name: {{ $.Values.serviceui.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/uat
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}-uat
            port:
              name: {{ $.Values.uat.service.portName | default "headless" }}
      - path: {{ $basePath | default "" }}/api
        pathType: Prefix
        backend:
          service:
            name: {{ $fullName }}-api
            port:
              name: {{ $.Values.serviceapi.service.portName | default "headless" }}
  {{- end }}
status:
  loadBalancer: {}
{{- end }}
